<Window x:Class="ESBtest.View.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ESBtest"
        xmlns:common="clr-namespace:ESBtest.Common"
        mc:Ignorable="d" Name="MainWindow"
        Title="MainWindow" Height="450" Width="800" MinHeight="300" MinWidth="300"
        WindowStartupLocation="CenterScreen"  WindowStyle="None"
        AllowsTransparency="True" Background="{x:Null}" ResizeMode="CanResizeWithGrip">

    <Window.Resources>
        <!--  DatePicker禁止手动输入数据  -->
        <Style TargetType="DatePickerTextBox">
            <Setter Property="IsReadOnly" Value="True"/>
        </Style>
    </Window.Resources>

    <Border Margin="5" Background="#EFEFEF">
        <Border.Effect>
            <DropShadowEffect Color="Blue" ShadowDepth="0" BlurRadius="5" Opacity="0.3" Direction="0"/>
        </Border.Effect>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <Label VerticalAlignment="Top" Height="20" MouseDown="Label_MouseDown" Grid.Column="0"/>
                <Menu VerticalAlignment="Top" Background="#EEEEEE"  Height="20" FontSize="14" HorizontalAlignment="Left">
                    <MenuItem Header="功能" >
                        <MenuItem x:Name="MenuItemSearch" Header="样品查询" Command="{Binding MenuSearchSampleCommand}" CommandParameter="{Binding ElementName=MainWindow}" IsCheckable="True" IsChecked="True"/>
                        <MenuItem x:Name="MenuItemInsert" Header="数据导入" Command="{Binding MenuInsertDataCommand}" CommandParameter="{Binding ElementName=MainWindow}" IsCheckable="True"/>
                        <MenuItem x:Name="MenuItemOutput" Header="数据导出" Command="{Binding MenuOutputDataCommand}" CommandParameter="{Binding ElementName=MainWindow}" IsCheckable="True"/>
                        <Separator/>
                        <MenuItem Header="样品借出相关"/>

                    </MenuItem>
                    <MenuItem Header="设置" >
                        <MenuItem Header="个人信息设置" Command="{Binding UserInformationCommand}"/>
                        <MenuItem Header="系统设置"/>
                    </MenuItem>
                    <MenuItem Header="帮助" >
                        <MenuItem Header="查看帮助"/>
                        <Separator/>
                        <MenuItem Header="关于"/>
                    </MenuItem>
                    <!-- 收藏夹 -->
                    <MenuItem Header="收藏夹" Command="{Binding MenuFavoriteCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                    <!-- 购物车 -->
                    <MenuItem Header="购物车" Command="{Binding MenuCartCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                </Menu>
                <Button x:Name="ButtonMini" Style="{StaticResource MinimizeWindowButtonStyle}" 
                        Command="{Binding MinWindowCommand}" CommandParameter="{Binding ElementName=MainWindow}" Grid.Column="1"/>
                <Button x:Name="ButtonMax" Style="{StaticResource MaximizeWindowButtonStyle1}" 
                        Command="{Binding MaxWindowCommand}" CommandParameter="{Binding ElementName=MainWindow}" Grid.Column="2"/>
                <Button x:Name="ButtonClose" Style="{StaticResource CloseWindowButtonStyle}" 
                        Command="{Binding CloseWindowCommand}" CommandParameter="{Binding ElementName=MainWindow}" Grid.Column="3"/>
            </Grid>
            <!--  工具栏 && 用户  -->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="25"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <ToolBar Grid.Column="0">
                    <Button Content="加入收藏" Command="{Binding AddFavoriteCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                    <Button Content="加入购物车" Command="{Binding AddIntoCartCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                    <Separator/>
                    <Button Content="删除" Command="{Binding DeleteSelectedSampleCommand}" CommandParameter="{Binding ElementName=MainWindow}" />
                    <Separator/>
                </ToolBar>
                <Button Grid.Column="1" Content="i" Command="{Binding UserInfoCommand}"/>
                <Label Grid.Column="2" Content="{Binding Name, Source={x:Static common:GlobalValue.CurrentUser}}"/>
            </Grid>
            
            <!--  主体部分  -->
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="300" MinWidth="300"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <!--  左侧操作面板  -->
                <Border>
                    <Border.Effect>
                        <DropShadowEffect Color="LightGray" ShadowDepth="0" BlurRadius="5" Opacity="0.3" Direction="0"/>
                    </Border.Effect>
                    <!--  标签页  -->
                    <TabControl Grid.Column="0" x:Name="TabControlFunction" >
                        <!--  查询标签页  -->
                        <TabItem Header="查询" IsSelected="True"  Visibility="Collapsed">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <!--  文本框输入  -->
                                <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="10 0 10 0">
                                    <Label Content="关键字" Margin="10 0 0 0"/>
                                    <TextBox x:Name="TextBoxKeyWord" Width="120" Text="{Binding SearchModel.KeyWord, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Content="搜索" Command="{Binding SearchCommand}" CommandParameter="{Binding ElementName=SampleDataGrid}"/>
                                </StackPanel>
                                <!--  种类  -->
                                <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="10 10 10 0">
                                    <CheckBox x:Name="CheckBoxCategory" IsChecked="{Binding SearchModel.IsCategoryChecked}" VerticalAlignment="Center"/>
                                    <Label Content="种类"/>
                                    <ComboBox x:Name="ComboBoxCategory" Width="120" SelectedIndex="{Binding SearchModel.CategoryIndex, Mode=TwoWay}" 
                                          ItemsSource="{Binding ComboBoxCategory, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                </StackPanel>
                                <!--  采样时间  -->
                                <StackPanel Grid.Row="2" Margin="10 10 10 0">
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox x:Name="CheckBoxSamplingTime" IsChecked="{Binding SearchModel.IsSamplingTimeChecked}" VerticalAlignment="Center"/>
                                        <Label Content="采样时间"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <DatePicker x:Name="DatePikerStartDate" SelectedDate="{Binding SearchModel.StartDate, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="100"
                                                DisplayDateStart="{Binding FirstSamplingDate}" DisplayDateEnd="{Binding LastSamplingDate}" />
                                        <Label Content="->"/>
                                        <DatePicker x:Name="DatePikerEndDate" SelectedDate="{Binding SearchModel.EndDate, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="100"
                                                DisplayDateStart="{Binding SearchModel.StartDate, UpdateSourceTrigger=PropertyChanged}" DisplayDateEnd="{Binding LastSamplingDate}"/>
                                    </StackPanel>
                                </StackPanel>
                                <!--  采样地点  *待实现:可以用gis组件来框选区域or选择点*  -->
                                <StackPanel Grid.Row="3" Margin="10 10 10 0">
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox x:Name="CheckBoxSamplingLocation" IsChecked="{Binding SearchModel.IsSamplingLocationChecked}" VerticalAlignment="Center"/>
                                        <Label Content="采样地点"/>
                                        <Button Content="手动选择"/>
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                                        <Label Content="x: "/>
                                        <TextBox x:Name="TextBoxNW_x" Width="40" Text="{Binding SearchModel.NW.longitude, StringFormat='f2', Mode=TwoWay}" common:TextBoxAttachedProperties.MyIsOnlyNumber="True"/>
                                        <Label Content="y: " />
                                        <TextBox x:Name="TextBoxNW_y" Width="40" Text="{Binding SearchModel.NW.latitude, StringFormat='f2', Mode=TwoWay}" common:TextBoxAttachedProperties.MyIsOnlyNumber="True"/>
                                        <Border Background="Transparent" Margin="5 0 5 0">
                                            <Path Data="M0 0 10 0" Stroke="Black" StrokeThickness="2" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        </Border>
                                        <Label Content="x: "/>
                                        <TextBox x:Name="TextBoxSE_x" Width="40" Text="{Binding SearchModel.SE.longitude, StringFormat='f2', Mode=TwoWay}" common:TextBoxAttachedProperties.MyIsOnlyNumber="True"/>
                                        <Label Content="y: "/>
                                        <TextBox x:Name="TextBoxSE_y" Width="40" Text="{Binding SearchModel.SE.latitude, StringFormat='f2', Mode=TwoWay}" common:TextBoxAttachedProperties.MyIsOnlyNumber="True"/>
                                    </StackPanel>
                                </StackPanel>
                                <!--  清空搜索条件  -->
                                <StackPanel Grid.Row="4" Orientation="Horizontal" Margin="50 10 0 0">
                                    <Button Content="清空搜索条件" Command="{Binding SearchResetCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                    <Button Content="清空搜索内容" Command="{Binding SearchClearCommand}" CommandParameter="{Binding ElementName=SampleDataGrid}" Margin="20 0 0 0"/>
                                </StackPanel>
                                <!--  留白  -->
                                <StackPanel Grid.Row="5">
                                </StackPanel>
                            </Grid>
                        </TabItem>
                        <!--  导入标签页  -->
                        <TabItem Header="导入"  Visibility="Collapsed">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <!--  手动导入  -->
                                <GroupBox Header="手动导入" Grid.Row="0">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                            <RowDefinition Height="auto"/>
                                        </Grid.RowDefinitions>
                                        <StackPanel Grid.Row="0" Orientation="Horizontal" Margin="0 10 0 0">
                                            <Label Content="样品名称"/>
                                            <TextBox Text="{Binding SampleModel.SampleName}" Width="125"/>
                                        </StackPanel>
                                        <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="0 10 0 0">
                                            <Label Content="样品种类"/>
                                            <ComboBox x:Name="ComboBoxCategoryInsert" Width="125" SelectedIndex="{Binding SampleModel.CategoryIndex, Mode=TwoWay}" 
                                                ItemsSource="{Binding ComboBoxCategory, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                        </StackPanel>
                                        <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0 10 0 0">
                                            <Label Content="采样时间"/>
                                            <DatePicker x:Name="DatePikerStartDateInsert" SelectedDate="{Binding SampleModel.SamplingDateTime, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="125"/>
                                        </StackPanel>
                                        <StackPanel Grid.Row="3" Orientation="Horizontal" Margin="0 10 0 0">
                                            <Label Content="采样地点"/>
                                            <Label Content="x: "/>
                                            <TextBox Width="40" Text="{Binding SampleModel.Longitude, StringFormat='f2', Mode=TwoWay}" common:TextBoxAttachedProperties.MyIsOnlyNumber="True"/>
                                            <Label Content="y: "/>
                                            <TextBox Width="40" Text="{Binding SampleModel.Latitude, StringFormat='f2', Mode=TwoWay}" common:TextBoxAttachedProperties.MyIsOnlyNumber="True"/>
                                        </StackPanel>
                                        <StackPanel Grid.Row="4" Margin="0 10 0 0">
                                            <Button Content="导入" Command="{Binding InsertSampleInfoCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                        </StackPanel>
                                    </Grid>
                                </GroupBox>
                                <!--  批量导入  -->
                                <GroupBox Header="批量导入" Grid.Row="1">
                                    <StackPanel>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="auto"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox x:Name="TextBoxFilePath" Grid.Column="0" IsReadOnly="True" />
                                            <Button Grid.Column="1" Content="选择文件" Command="{Binding OpenInsertFileDialogCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                        </Grid>
                                        <StackPanel Orientation="Horizontal">
                                            <Button Content="导入" Width="80" Margin="90 10 0 0" Command="{Binding InsertFileDataCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                        </StackPanel>
                                    </StackPanel>
                                </GroupBox>
                            </Grid>
                        </TabItem>
                        <!--  导出标签页  -->
                        <TabItem Header="导出"  Visibility="Collapsed">
                            <StackPanel Margin="10 20 10 0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="导出路径"/>
                                    <TextBox x:Name="TextBoxOutputFilePath" Grid.Column="1" IsReadOnly="True" />
                                </Grid>
                                <StackPanel Orientation="Horizontal" Margin="60 10 0 0">
                                    <Button Content="选择路径" Width="80" Margin="0 0 20 0" Command="{Binding OpenOutputFileDialogCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                    <Button Content="导出" Width="80"  Command="{Binding OutputFileDataCommand}" CommandParameter="{Binding ElementName=MainWindow}"/>
                                </StackPanel>
                            </StackPanel>
                        </TabItem>
                    </TabControl>
                </Border>
                
                
                <!--  数据展示  -->
                <DataGrid Name="SampleDataGrid" Grid.Column="2" ItemsSource="{Binding SampleModelList, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" FontSize="14" 
                          AutoGenerateColumns="False" CanUserAddRows="False" >
                    <DataGrid.RowStyle >
                        <Style TargetType="DataGridRow">
                            <Setter Property="Background" Value="White"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="LightGray"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="White"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Binding="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <DataGridCheckBoxColumn.HeaderTemplate >
                                <DataTemplate>
                                    <CheckBox HorizontalAlignment="Center" VerticalAlignment="Center" Command= "{Binding Path=DataContext.CheckAllCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                              CommandParameter= "{Binding Path=IsChecked, RelativeSource={RelativeSource Self}}"/>
                                </DataTemplate>
                            </DataGridCheckBoxColumn.HeaderTemplate>
                            <DataGridCheckBoxColumn.ElementStyle>
                                <Style TargetType="CheckBox"/>
                            </DataGridCheckBoxColumn.ElementStyle>
                            <DataGridCheckBoxColumn.CellStyle>
                                <Style>
                                    <Setter Property="CheckBox.VerticalAlignment"  Value="Center"/>
                                    <Setter Property="CheckBox.HorizontalAlignment"  Value="Center"/>
                                </Style>
                            </DataGridCheckBoxColumn.CellStyle>
                        </DataGridCheckBoxColumn>
                        <DataGridTextColumn Header="编号" Binding="{Binding SampleID}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="名称" Binding="{Binding SampleName}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="种类" Binding="{Binding Category}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="采样时间" Binding="{Binding SamplingTime}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="采样地点" Binding="{Binding SamplingLocation}" IsReadOnly="True"/>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsFavorited, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Style="{DynamicResource CheckBoxStyleFavorites}" 
                                              Command= "{Binding Path=DataContext.FavoritesCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                              CommandParameter= "{Binding Path=SelectedItem, RelativeSource={RelativeSource AncestorType= DataGrid}}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsInCart, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Style="{DynamicResource CheckBoxStyleCart}" 
                                              Command= "{Binding Path=DataContext.CartCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                              CommandParameter= "{Binding Path=SelectedItem, RelativeSource={RelativeSource AncestorType= DataGrid}}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                    <!--  绑定双击事件  -->
                    <DataGrid.InputBindings>
                        <MouseBinding Gesture="LeftDoubleClick" Command="{Binding DataGridDoubleClickCommand}" CommandParameter="{Binding ElementName=SampleDataGrid}"/>
                    </DataGrid.InputBindings>
                </DataGrid>
            </Grid>
            <!--  底部状态栏  -->
            <StatusBar Background="#E0E0E0" Grid.Row="3">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="120" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <!--    -->
                <StatusBarItem>
                </StatusBarItem>
                <!--  分割线  -->
                <Separator Grid.Column="1" />
                <!--  版本信息  -->
                <StatusBarItem Grid.Column="2" Background="#EEEEEE">
                    <TextBlock Text="Version: alpha v0.0.4"/>
                </StatusBarItem>
                <!--  分割线  -->
                <Separator Grid.Column="3" />
                <!--  实时时间  -->
                <StatusBarItem Grid.Column="4" Background="#FFFFFF" >
                    <TextBlock x:Name="CurrentTime"/>
                </StatusBarItem>
                
            </StatusBar>
        </Grid>
    </Border>
</Window>
